#!/usr/bin/perl

use strict;
use warnings;
use utf8;

use Cwd 'abs_path';
use File::Basename;

my $checker_dir = dirname(abs_path(__FILE__)) . '/FCHK-checks/';

# ----------- ARGV

die 'not meant to be run manually'
  unless (scalar(@ARGV) > 7);

my ($ref, $oldsha, $newsha, $oldtree, $newtree, $access, $refex) = @ARGV;
splice @ARGV, 0, 7;

# ----------- exclude (from rev-list)

my @exclude;
if ($oldsha eq '0000000000000000000000000000000000000000') {
  open GH, '-|', 'git', 'for-each-ref', '--format', '^%(refname:short)', 'refs/heads/'
    or die "failed: git for-each-ref: $!";
  @exclude = <GH>;
  close GH;
}
else {
  @exclude = ('^' . $oldsha);
}
chomp @exclude;

# ----------- rev-list (new pushed commits)

open GH, '-|', 'git', 'rev-list', '--reverse', $newsha, @exclude
  or die "failed: git rev-list: $!";
my @revlist = <GH>;
close GH;
chomp @revlist;

# ----------- for each new commit...
my $list = '';
my $first = '';
my $last = '';

foreach my $commit (@revlist) {
  my $commit_printed = 0;

  open GH, '-|', 'git', 'show', '--pretty=format:', '--diff-filter=ACMRTUXB', '--name-only', $commit
    or die "failed: git show $commit: $!";
  my @files = <GH>;
  close GH;
  chomp @files;

  foreach my $file (@files) {
    next if (!length $file);

    my $matched = '';

    foreach my $checker (@ARGV) {
      if (system($checker_dir . $checker, $commit, $file) != 0) {
          $matched .= ' ' . $checker;
      }
    }

    if (length $matched) {
      if (!$commit_printed) {
        $list .= "\n" . '  ' . $commit . "\n";
        $commit_printed = 1;
      }
      if (!length $first) {
        $first = $commit;
      }
      $last = $commit;
      $list .= '    ' . $file . ':' . $matched . "\n";
    }
  }
}

# ----------- print refex

if (length $list) {
  print "\n";
  print "------------------------------------------------------------------\n";
  print "\n";
  print "Hey, listen! Some of the files you're trying to push do not adhere\n";
  print "to certain standards. We'll have to do something about that. :-)\n";
  print "\n";

  if ($last eq $first) {
    print 'Only your last local commit is affected. Consider yourself lucky!', "\n";
    print 'To change your latest commit: change files, `git add\' them and:', "\n";
    print "\n";
    print '  $ git commit --amend', "\n";
  }
  else {
    print 'More than one commit is affected. To change all affected commits:', "\n";
    print "\n";
    print '  $ git rebase -i ' . $first . '^', "\n";
  }

  print "\n";
  print "------------------------------------------------------------------\n";
  print "\n";
  print "List of lousy files and violated standards in your pushed commits:\n";

  print $list;
  print "\n";
  print "------------------------------------------------------------------\n";
  print "\n";

  print $refex, "\n";
}
